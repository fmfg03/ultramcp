version: '3.8'

services:
  claude-memory:
    image: ultramcp/claude-memory:latest
    container_name: claude-memory-service
    restart: unless-stopped
    ports:
      - "8080:8007"
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=claude-memory
      - PORT=8007
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_URL=${REDIS_URL}
      - QDRANT_URL=http://qdrant:6333
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - LOG_LEVEL=info
      - SEMANTIC_SEARCH=true
      - AST_PARSING=true
      - CODE_INTELLIGENCE=true
      - MEMORY_PERSISTENCE=true
      - EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - VECTOR_DIMENSIONS=384
      - MAX_CONTEXT_LENGTH=8192
      - CHUNK_SIZE=512
      - CHUNK_OVERLAP=50
    volumes:
      - ./data/memory:/app/data/memory
      - ./data/projects:/app/data/projects
      - ./data/cache:/app/data/cache
      - ./logs:/app/logs
      - ./config:/app/config
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 3G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 120s
    networks:
      - ultramcp-network
    depends_on:
      - qdrant
      - redis
    labels:
      - "ultramcp.service=claude-memory"
      - "ultramcp.version=latest"
      - "ultramcp.memory_intensive=true"

  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: memory-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    volumes:
      - qdrant-data:/qdrant/storage
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - ultramcp-network

  redis:
    image: redis:7-alpine
    container_name: memory-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-ultramcp_redis} --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ultramcp-network

  embeddings-service:
    image: ultramcp/embeddings-service:latest
    container_name: memory-embeddings
    restart: unless-stopped
    ports:
      - "9003:9003"
    environment:
      - PORT=9003
      - MODEL_NAME=sentence-transformers/all-MiniLM-L6-v2
      - DEVICE=cpu
      - MAX_BATCH_SIZE=32
      - MAX_SEQUENCE_LENGTH=512
    volumes:
      - embeddings-cache:/app/cache
      - model-cache:/app/models
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 60s
      timeout: 20s
      retries: 3
    networks:
      - ultramcp-network

networks:
  ultramcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  qdrant-data:
    driver: local
  redis-data:
    driver: local
  embeddings-cache:
    driver: local
  model-cache:
    driver: local