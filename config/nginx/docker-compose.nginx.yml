# UltraMCP ContextBuilderAgent 2.0 - Nginx Load Balancer Docker Compose
# Production-Ready Load Balancing with Health Checks

version: '3.8'

services:
  nginx-lb:
    image: nginx:1.25-alpine
    container_name: ultramcp-contextbuilder-lb
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Status port
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../logs/nginx:/var/log/nginx
      - ./static:/var/www/contextbuilder/static:ro
    depends_on:
      - context-builder-core
      - belief-reviser
      - contradiction-resolver
      - utility-predictor
      - context-drift-detector
      - prompt-assembler
      - context-observatory
      - deterministic-debug
      - context-memory-tuner
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.contextbuilder-lb.rule=Host(`contextbuilder.ultramcp.local`)"
      - "traefik.http.routers.contextbuilder-lb.entrypoints=web,websecure"
      - "traefik.http.routers.contextbuilder-lb.tls=true"

  # Core ContextBuilderAgent Services
  context-builder-core:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-core-primary
    ports:
      - "8020:8020"
    environment:
      - SERVICE_NAME=context-builder-core
      - SERVICE_PORT=8020
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  context-builder-core-backup:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-core-backup
    ports:
      - "8021:8020"
    environment:
      - SERVICE_NAME=context-builder-core-backup
      - SERVICE_PORT=8020
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  belief-reviser:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-belief-reviser
    ports:
      - "8022:8022"
    environment:
      - SERVICE_NAME=belief-reviser
      - SERVICE_PORT=8022
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8022/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  belief-reviser-backup:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-belief-reviser-backup
    ports:
      - "8023:8022"
    environment:
      - SERVICE_NAME=belief-reviser-backup
      - SERVICE_PORT=8022
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8022/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  contradiction-resolver:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-contradiction-resolver
    ports:
      - "8024:8024"
    environment:
      - SERVICE_NAME=contradiction-resolver
      - SERVICE_PORT=8024
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8024/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  utility-predictor:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-utility-predictor
    ports:
      - "8025:8025"
    environment:
      - SERVICE_NAME=utility-predictor
      - SERVICE_PORT=8025
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  context-drift-detector:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-drift-detector
    ports:
      - "8026:8026"
    environment:
      - SERVICE_NAME=context-drift-detector
      - SERVICE_PORT=8026
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8026/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  prompt-assembler:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-prompt-assembler
    ports:
      - "8027:8027"
    environment:
      - SERVICE_NAME=prompt-assembler
      - SERVICE_PORT=8027
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8027/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  context-observatory:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-observatory
    ports:
      - "8028:8028"
    environment:
      - SERVICE_NAME=context-observatory
      - SERVICE_PORT=8028
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8028/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  deterministic-debug:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-deterministic-debug
    ports:
      - "8029:8029"
    environment:
      - SERVICE_NAME=deterministic-debug
      - SERVICE_PORT=8029
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8029/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  context-memory-tuner:
    image: ultramcp/context-builder-agent:latest
    container_name: contextbuilder-memory-tuner
    ports:
      - "8030:8030"
    environment:
      - SERVICE_NAME=context-memory-tuner
      - SERVICE_PORT=8030
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/contextbuilder
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres

  # Infrastructure Services
  redis:
    image: redis:7-alpine
    container_name: contextbuilder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: contextbuilder-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=contextbuilder
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - contextbuilder-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  contextbuilder-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
  postgres_data: