# UltraMCP ContextBuilderAgent 2.0 - HAProxy Load Balancer Configuration
# Alternative to Nginx for Advanced Load Balancing

global
    daemon
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    
    # SSL Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    # Logging
    log stdout local0

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    option dontlognull
    option forwardfor
    option http-server-close
    retries 3
    
    # Error handling
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Frontend Configuration
frontend contextbuilder_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/contextbuilder.pem
    redirect scheme https if !{ ssl_fc }
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 100 }
    
    # Security headers
    http-response set-header X-Frame-Options "SAMEORIGIN"
    http-response set-header X-Content-Type-Options "nosniff"
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # ACL definitions for service routing
    acl is_context_api path_beg /api/context/
    acl is_belief_api path_beg /api/belief/
    acl is_contradiction_api path_beg /api/contradiction/
    acl is_utility_api path_beg /api/utility/
    acl is_drift_api path_beg /api/drift/
    acl is_prompt_api path_beg /api/prompt/
    acl is_observatory_api path_beg /api/observatory/
    acl is_debug_api path_beg /api/debug/
    acl is_memory_api path_beg /api/memory/
    acl is_websocket path_beg /ws/
    acl is_health path_beg /health
    acl is_stats path_beg /stats
    
    # Service routing
    use_backend context_builder_core if is_context_api
    use_backend belief_reviser if is_belief_api
    use_backend contradiction_resolver if is_contradiction_api
    use_backend utility_predictor if is_utility_api
    use_backend context_drift_detector if is_drift_api
    use_backend prompt_assembler if is_prompt_api
    use_backend context_observatory if is_observatory_api
    use_backend deterministic_debug if is_debug_api
    use_backend context_memory_tuner if is_memory_api
    use_backend websocket_backend if is_websocket
    use_backend health_check if is_health
    use_backend stats_backend if is_stats
    
    default_backend context_builder_core

# Backend Configurations

backend context_builder_core
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server core1 127.0.0.1:8020 check maxconn 100 weight 100
    server core2 127.0.0.1:8021 check maxconn 100 weight 50 backup

backend belief_reviser
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server belief1 127.0.0.1:8022 check maxconn 50 weight 100
    server belief2 127.0.0.1:8023 check maxconn 50 weight 50 backup

backend contradiction_resolver
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server contradiction1 127.0.0.1:8024 check maxconn 30 weight 100

backend utility_predictor
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server utility1 127.0.0.1:8025 check maxconn 50 weight 100

backend context_drift_detector
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server drift1 127.0.0.1:8026 check maxconn 30 weight 100

backend prompt_assembler
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server prompt1 127.0.0.1:8027 check maxconn 80 weight 100

backend context_observatory
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server observatory1 127.0.0.1:8028 check maxconn 60 weight 100

backend deterministic_debug
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server debug1 127.0.0.1:8029 check maxconn 20 weight 100

backend context_memory_tuner
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server memory1 127.0.0.1:8030 check maxconn 50 weight 100

backend websocket_backend
    balance leastconn
    option httpchk GET /health
    http-check expect status 200
    
    server ws1 127.0.0.1:8028 check maxconn 100 weight 100

backend health_check
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    server health1 127.0.0.1:8020 check
    server health2 127.0.0.1:8022 check
    server health3 127.0.0.1:8024 check
    server health4 127.0.0.1:8025 check
    server health5 127.0.0.1:8026 check
    server health6 127.0.0.1:8027 check
    server health7 127.0.0.1:8028 check
    server health8 127.0.0.1:8029 check
    server health9 127.0.0.1:8030 check

backend stats_backend
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# Admin Interface
listen admin
    bind *:8404
    stats enable
    stats uri /
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:contextbuilder2024

# Health Check Interface
listen health
    bind *:8405
    mode http
    monitor-uri /health
    option dontlognull